import{Builder,By,Key,until}from"npm:selenium-webdriver";import*as chrome from"npm:selenium-webdriver/chrome.js";const TRANSLATE_MAX_CHAR_COUNT_PER_TIME=5e3;import{assert,COMMAND_LINE_ARGS,copyFileSync,existsSync,FILE_CREATE_NEW_AND_MODE_ALL,FILE_MODE_ALL,getFilenameTimestampPostfix,HTML_TAG_BEGIN__EN_US,HTML_TAG_BEGIN__ZH_CN,HTML_TAG_BEGIN__ZH_TW,HTML_TAG_END__EN_US,HTML_TAG_END__ZH_CN,HTML_TAG_END__ZH_TW,I18N_HTML_BEGIN_TAG_LENGTH,joinPath,LF,mkdirSync,readTextFileSync,SEP,SEPARATOR_OF_SPLIT,statSync,writeTextFileSync}from"https://raw.githubusercontent.com/anqisoft/ts_utils/main/index.ts";import{showHelpOrVersionOrCallbackAndShowUsedTime}from"https://raw.githubusercontent.com/anqisoft/ts_command_line_help/main/index.ts";const GOOGLE_TRANSLATE_LANG_CN="zh-CN";const GOOGLE_TRANSLATE_LANG_EN="en";const GOOGLE_TRANSLATE_LANG_TW="zh-TW";const CHROME="chrome";const EN_REPLACE_PATCH_FROM=/<en_us\> ([^\n]+) <\/en_us\>/g;const EN_REPLACE_PATCH_TO="<en_us>$1</en_us>";async function translateByGoogleCore(n,o,e){const c=`https://translate.google.com/details?sl=${o}&tl=${e}`;const r=".er8xn";const a=".lRu31";const t=new Date;const i=await(new Builder).forBrowser(CHROME).setChromeOptions((new chrome.Options).headless()).build();try{await i.get(c);let t=await i.findElement(By.css(r));const s=n.length;if(s<=TRANSLATE_MAX_CHAR_COUNT_PER_TIME){await i.actions({bridge:true}).doubleClick(t).perform();await t.sendKeys(n,Key.RETURN);await i.wait(until.elementLocated(By.css(a)),4e4);const l=await i.findElement(By.css(a));const T=await l.getText();return T}else{const E=[];let _=n;let e=s;const A=`</${o===GOOGLE_TRANSLATE_LANG_EN?"en_us":o.replaceAll("-","_").toLowerCase()}>`;const N=A.length;do{let s="";if(e<=TRANSLATE_MAX_CHAR_COUNT_PER_TIME){s=_}else{const L=_.substring(0,TRANSLATE_MAX_CHAR_COUNT_PER_TIME).lastIndexOf(A);if(L>-1&&L+N<=TRANSLATE_MAX_CHAR_COUNT_PER_TIME){s=_.substring(0,L+N)}else{let n=false;(o===GOOGLE_TRANSLATE_LANG_EN?"\n.?! ":"\n。？！ ").split("").forEach(e=>{if(n)return;const t=_.indexOf(e);if(t>0){s=_.substring(0,t);n=true}});if(!n){s=_.substring(0,TRANSLATE_MAX_CHAR_COUNT_PER_TIME)}}}await i.actions({bridge:true}).doubleClick(t).perform();await t.sendKeys(s,Key.RETURN);_=_.substring(s.length);await i.wait(until.elementLocated(By.css(a)),4e4);const l=await i.findElement(By.css(a));const T=await l.getText();E.push(T);e=_.length;if(e==0){break}await i.get(c);t=await i.findElement(By.css(r))}while(true);return E.join(LF)}}finally{try{await i.quit()}catch(e){console.error(e)}const _=new Date;console.log(_.getTime()-t.getTime())}}async function splitCommentCore(e,t){const n=statSync(e);assert(n.isFile);mkdirSync(t,{recursive:true});assert(statSync(t).isDirectory);const s=readTextFileSync(e);const _=s.split(HTML_TAG_BEGIN__EN_US);_.shift();const l=[];const T=[];const E=[];_.forEach((e,t)=>{const n=e.indexOf("</en_us>");assert(n>-1,`${t}: EN_US_END_POS not right.\n${e}`);const s=e.indexOf("<zh_cn>");assert(s>n,`${t}: ZH_CN_START_POS not right.\n${e}`);const _=e.indexOf("</zh_cn>");assert(_>s,`${t}: ZH_CN_END_POS not right.\n${e}`);const o=e.indexOf("<zh_tw>");assert(o>_,`${t}: ZH_TW_START_POS not right.\n${e}`);const c=e.indexOf("</zh_tw>");assert(c>o,`${t}: ZH_TW_END_POS not right.\n${e}`);const r=e.substring(0,n);const a=e.substring(s+I18N_HTML_BEGIN_TAG_LENGTH,_);const i=e.substring(o+I18N_HTML_BEGIN_TAG_LENGTH,c);l.push(`<en_us>${r}</en_us>`);T.push(`<zh_cn>${a}</zh_cn>`);E.push(`<zh_tw>${i}</zh_tw>`)});const o=joinPath(t,e.split(SEP).pop(),SEP);mkdirSync(o,{recursive:true});const c=T.join(LF);const r=c;const a=c.replaceAll(HTML_TAG_BEGIN__ZH_CN,HTML_TAG_BEGIN__ZH_TW).replaceAll(HTML_TAG_END__ZH_CN,HTML_TAG_END__ZH_TW);const i=[["en_us",l],["zh_cn",T],["zh_tw",E]];for(let e=0;e<3;++e){const A=i[e];const N=A[0];const L=A[1].join(LF);writeTextFileSync(joinPath(o,`${N}.original.txt`),L,FILE_MODE_ALL);const h=joinPath(o,`${N}.txt`);if(!existsSync(h)){switch(e){case 0:writeTextFileSync(h,(await translateByGoogleCore(r,GOOGLE_TRANSLATE_LANG_CN,GOOGLE_TRANSLATE_LANG_EN)).replaceAll(HTML_TAG_BEGIN__ZH_CN,HTML_TAG_BEGIN__EN_US).replaceAll(HTML_TAG_END__ZH_CN,HTML_TAG_END__EN_US).replace(EN_REPLACE_PATCH_FROM,EN_REPLACE_PATCH_TO),FILE_CREATE_NEW_AND_MODE_ALL);break;case 1:writeTextFileSync(h,L,FILE_CREATE_NEW_AND_MODE_ALL);break;case 2:writeTextFileSync(h,await translateByGoogleCore(a,GOOGLE_TRANSLATE_LANG_CN,GOOGLE_TRANSLATE_LANG_TW),FILE_CREATE_NEW_AND_MODE_ALL);break;default:break}}}}export async function splitComments(e,t){try{await splitCommentCore(e,t);return true}catch(e){console.error(e);return false}}function getSplitResultFromGoalFileByLang(e,t){const n=readTextFileSync(joinPath(e,`${t}.txt`)).substring(I18N_HTML_BEGIN_TAG_LENGTH).replace(new RegExp(`</${t}>[\r\n]+<${t}>`,"g"),SEPARATOR_OF_SPLIT).split(SEPARATOR_OF_SPLIT);const s=n.length-1;n[s]=n[s].replace(`</${t}>`,"");return n}export function joinComments(e,t){try{const n=statSync(e);assert(n.isFile);assert(statSync(t).isDirectory);const s=readTextFileSync(e);const _=e.concat(getFilenameTimestampPostfix(),".bak");if(!existsSync(_)){writeTextFileSync(_,s)}const o=joinPath(t,e.split(SEP).pop(),SEP);const c=getSplitResultFromGoalFileByLang(o,"en_us");const r=getSplitResultFromGoalFileByLang(o,"zh_cn");const a=getSplitResultFromGoalFileByLang(o,"zh_tw");const i=s.replace(/((\<|\<\/)(en_us|zh_cn|zh_tw)\>)/g,SEPARATOR_OF_SPLIT).split(SEPARATOR_OF_SPLIT);const l=c.length;console.log(r.length,a.length,l);assert(l===r.length&&l===a.length);console.log("SOURCE_CONTENT\n",s,"\n","CODES_ARRAY\n",i,"\n","US_COMMENTS\n",c,"\n","CN_COMMENTS\n",r,"\n","TW_COMMENTS\n",a,"\n","COUNT",l,"\n");for(let e=0;e<l;++e){const T=6*e;i[T+1]=`<en_us>${c[e]}</en_us>`;i[T+3]=`<zh_cn>${r[e]}</zh_cn>`;i[T+5]=`<zh_tw>${a[e]}</zh_tw>`}console.log("CODES_ARRAY\n",i,"\n\n\n\n\n","[END RESULT]\n",i.join(""),"\n");writeTextFileSync(e,i.join(""));return true}catch(e){console.error(e);return false}}async function cn2trilingualCore(e){const t=6;const n=statSync(e);assert(n.isFile);const s=readTextFileSync(e);const _=e.concat(getFilenameTimestampPostfix(),".bak");if(!existsSync(_)){writeTextFileSync(_,s)}const o=[];const c=[];const r=[];const a=s.replace(/((\<|\<\/)(en_us|zh_cn|zh_tw)\>)/g,SEPARATOR_OF_SPLIT).split(SEPARATOR_OF_SPLIT);const i=a.length-t;for(let e=0;e<i;e+=t){c.push(`<zh_cn>${a[e+3]}</zh_cn>`)}const l=c.join(LF);const T=l;const E=l.replaceAll(HTML_TAG_BEGIN__ZH_CN,HTML_TAG_BEGIN__ZH_TW).replaceAll(HTML_TAG_END__ZH_CN,HTML_TAG_END__ZH_TW);o.length=0;r.length=0;const A=(await translateByGoogleCore(T,GOOGLE_TRANSLATE_LANG_CN,GOOGLE_TRANSLATE_LANG_EN)).replaceAll(HTML_TAG_BEGIN__ZH_CN,HTML_TAG_BEGIN__EN_US).replaceAll(HTML_TAG_END__ZH_CN,HTML_TAG_END__EN_US).replace(EN_REPLACE_PATCH_FROM,EN_REPLACE_PATCH_TO);A.substring(I18N_HTML_BEGIN_TAG_LENGTH,A.length-I18N_HTML_BEGIN_TAG_LENGTH-1).replace(/<\/en_us>\n<en_us>/g,SEPARATOR_OF_SPLIT).split(SEPARATOR_OF_SPLIT).forEach(e=>o.push(e));const N=await translateByGoogleCore(E,GOOGLE_TRANSLATE_LANG_CN,GOOGLE_TRANSLATE_LANG_TW);N.substring(I18N_HTML_BEGIN_TAG_LENGTH,N.length-I18N_HTML_BEGIN_TAG_LENGTH-1).replace(/<\/zh_tw>\n<zh_tw>/g,SEPARATOR_OF_SPLIT).split(SEPARATOR_OF_SPLIT).forEach(e=>r.push(e));const L=o.length;for(let e=0;e<L;++e){const h=t*e;a[h+1]=`<en_us>${o[e]}</en_us>`;a[h+3]=`${c[e]}`;a[h+5]=`<zh_tw>${r[e]}</zh_tw>`}writeTextFileSync(e,a.join(""))}export async function cn2trilingual(t){const n=t.length;for(let e=0;e<n;++e){const s=t[e];try{await cn2trilingualCore(s)}catch(e){console.error(s,e);return false}}return true}function removeLangSeg(e,t){return e.replace(new RegExp(`[\\r\\n]+(([\\#]+[\\ \\t]+)|([\\ \\t]*\\/\\/[\\ \\t]*)|([\\ \\t]*\\*[\\ \\t]*))<${t}>`,"g"),`<${t}>`).replace(new RegExp(`</${t}>`,"g"),"\0".concat(`</${t}>`)).replace(new RegExp(`<${t}[^\0]+\0<\/${t}>`,"g"),"")}function keepByLang(e,t,n){let s=e;switch(t){case"en_us":break;case"zh_cn":s=s.replace(new RegExp(`([\\r\\n]+(([\\#]+[\\ \\t]+)|([\\ \\t]*\\/\\/[\\ \\t]*)|([\\ \\t]*\\*[\\ \\t]*)))<en_us>[^\r\n]+</en_us><${t}>`,"g"),`$1<${t}>`);break;case"zh_tw":s=s.replace(new RegExp(`([\\r\\n]+(([\\#]+[\\ \\t]+)|([\\ \\t]*\\/\\/[\\ \\t]*)|([\\ \\t]*\\*[\\ \\t]*)))<en_us>[^\r\n]+</en_us><zh_cn>[^\r\n]+</zh_cn><${t}>`,"g"),`$1<${t}>`);break;default:break}["en_us","zh_cn","zh_tw"].filter(e=>e!==t).forEach(e=>{s=removeLangSeg(s,e)});if(!n){s=s.replace(new RegExp(`(<|</)${t}>`,"g"),"")}return s}export function splitReadmeFiles(t,n){const s=n.length;for(let e=0;e<s;++e){const _=n[e];try{const o=readTextFileSync(_);const c=_.substring(0,_.toLowerCase().lastIndexOf("readme.md"));["en_us","zh_cn","zh_tw"].forEach(e=>{writeTextFileSync(c.concat(`README.${e}.md`),keepByLang(o,e,t))})}catch(e){console.error(_,e);return false}}return true}export function splitFiles(e,t){const n=t.length;for(let e=0;e<n;++e){const s=t[e];try{const _=s.split(SEP);const o=_.pop();const c=joinPath(_.join(SEP),"i18n");const r=()=>{const e=readTextFileSync(s);[["en_us",removeLangSeg(removeLangSeg(e,"zh_cn"),"zh_tw")],["zh_cn",removeLangSeg(removeLangSeg(e,"en_us"),"zh_tw")],["zh_tw",removeLangSeg(removeLangSeg(e,"en_us"),"zh_cn")]].forEach(([e,t])=>{const n=joinPath(c,e);mkdirSync(n,{recursive:true});writeTextFileSync(joinPath(n,o),t)})};switch(o.split(".").pop()?.toLowerCase()){case"md":case"xml":case"ini":case"txt":case"log":case"sass":case"scss":case"less":case"css":case"html":case"htm":case"h":case"cs":case"bas":case"php":case"py":case"rs":case"java":case"bat":case"ps1":case"js":case"ts":r();break;default:["en_us","zh_cn","zh_tw"].forEach(e=>{const t=joinPath(c,e);mkdirSync(t,{recursive:true});copyFileSync(s,joinPath(t,o))});break}}catch(e){console.error(s,e);return false}}return true}showHelpOrVersionOrCallbackAndShowUsedTime({en_us:"This tool is used to assist in internationalization operations of code or README.md and other files, such as splitting, merging, and translating.",zh_cn:"本工具用于辅助代码或README.md等文件的国际化操作，如拆分、合并、翻译等。",zh_tw:"本工具用於輔助程式碼或README.md等檔案的國際化操作，如分割、合併、翻譯等。"},"0.0.1",2,async()=>{const[e,t,...n]=COMMAND_LINE_ARGS;switch(e){case"splitComments":console.log(await splitComments(t,n[0]));break;case"joinComments":console.log(joinComments(t,n[0]));break;case"cn2trilingual":console.log(await cn2trilingual([t,...n]));break;case"splitReadmeFiles":console.log(splitReadmeFiles(t==="true",[...n]));break;case"splitFiles":console.log(splitFiles(t==="true",[...n]));break;default:break}});